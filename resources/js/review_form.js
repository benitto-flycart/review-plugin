/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/review-form/main.ts":
/*!*********************************!*\
  !*** ./src/review-form/main.ts ***!
  \*********************************/
/***/ (function() {

eval("\n// Define the types used in the class\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n// Main ReviewFormWidget class\nvar ReviewFormWidget = /** @class */ (function () {\n    function ReviewFormWidget() {\n        this.slides = [];\n        this.submitSlide = \"\";\n        this.lastSlide = \"\";\n        this.sliding = false;\n        this.dialog = undefined;\n        //@ts-ignore\n        this.jquery = undefined;\n        //@ts-ignore\n        this.jquery = window.jQuery;\n        // Initialize configuration and DOM elements\n        this.initConfig();\n        var inited = this.initShadowDOM();\n        if (inited) {\n            this.initReviewDetails();\n            this.init();\n        }\n        else {\n            console.log(\"shadow dom is not configured correctly\");\n        }\n    }\n    // Initialize store configuration from global window object\n    ReviewFormWidget.prototype.initConfig = function () {\n        // @ts-ignore\n        this.review_form_store_config = window.review_form_store_config;\n    };\n    // Initialize Shadow DOM\n    ReviewFormWidget.prototype.initShadowDOM = function () {\n        var template = document.getElementById(\"r_rfw_shadow_template\");\n        var host = document.getElementById(\"r_rfw_dialog_wrapper\");\n        console.log(host);\n        if (!host)\n            return false;\n        this.shadowRoot = host.attachShadow({ mode: \"open\" });\n        this.shadowRoot.appendChild(template.content.cloneNode(true));\n        template.remove();\n        this.dialog = this.shadowRoot.getElementById(\"review_form_dialog\");\n        return true;\n    };\n    ReviewFormWidget.prototype.open = function () {\n        var _a;\n        (_a = this.dialog) === null || _a === void 0 ? void 0 : _a.showModal();\n    };\n    // Initialize review details with default values\n    ReviewFormWidget.prototype.initReviewDetails = function () {\n        this.review_details = {\n            order_id: 0,\n            product_id: 0,\n            rating: 0,\n            review_text: \"\",\n            first_name: \"\",\n            last_name: \"\",\n            email: \"\",\n            translateX: 0,\n            activeSlide: {\n                index: 0,\n                name: \"\",\n            },\n            files: {\n                photos: [],\n            },\n            extra: {\n                previous_photo_count: 0,\n            },\n        };\n    };\n    // Initialize the form and load initial data\n    ReviewFormWidget.prototype.init = function () {\n        this.initActiveSlide();\n        this.loadInitialData();\n    };\n    // Initialize the active slide\n    ReviewFormWidget.prototype.initActiveSlide = function () {\n        this.review_details.activeSlide.index = 0;\n        this.review_details.activeSlide.name = this.getSlideNameToSet();\n    };\n    // Load initial data and render the form\n    ReviewFormWidget.prototype.loadInitialData = function () {\n        var _this = this;\n        var dialog = this.shadowRoot.querySelector(\"#review_form_dialog\");\n        var order_id = (dialog === null || dialog === void 0 ? void 0 : dialog.getAttribute(\"data-order-id\")) || \"0\";\n        var product_id = (dialog === null || dialog === void 0 ? void 0 : dialog.getAttribute(\"data-product-id\")) || \"0\";\n        this.review_details.order_id = parseInt(order_id, 10);\n        this.review_details.product_id = parseInt(product_id, 10);\n        this.jquery\n            .ajax(this.review_form_store_config.ajax_url, {\n            method: \"POST\",\n            data: {\n                action: this.review_form_store_config.action,\n                method: \"review_form_template\",\n                product_id: product_id,\n                order_id: order_id,\n                _wp_nonce: this.review_form_store_config._wp_nonce,\n                _wp_nonce_key: this.review_form_store_config._wp_nonce_key,\n            },\n            contentType: \"application/x-www-form-urlencoded\",\n        })\n            .then(function (response) {\n            var response_data = response.data;\n            _this.slides = response_data.slides;\n            _this.submitSlide = response_data.submit_button_slide;\n            _this.lastSlide = response_data.last_slide;\n            _this.initActiveSlide();\n            _this.jquery(dialog).html(response_data.template);\n            // Initialize different sections based on available slides\n            if (_this.hasSlide(\"rating\")) {\n                _this.initRatingSection();\n            }\n            if (_this.hasSlide(\"photo\")) {\n                _this.initPhotoSection();\n            }\n            if (_this.hasSlide(\"review\")) {\n                _this.initReviewContentSection();\n            }\n            if (_this.hasSlide(\"reviewer\")) {\n                _this.initReviewerInfoSection();\n            }\n            _this.registerCloseIcon();\n            _this.initFooter();\n            _this.showFooter();\n        })\n            .catch(function (error) {\n            var errorData = error.responseJSON.data;\n            _this.jquery(dialog).html(errorData.template);\n            _this.registerCloseIcon();\n        });\n    };\n    // Check if the slide exists\n    ReviewFormWidget.prototype.hasSlide = function (name) {\n        return this.slides.some(function (slide) { return slide.name === name; });\n    };\n    // Get the name of the slide to set based on the current index\n    ReviewFormWidget.prototype.getSlideNameToSet = function () {\n        var slide = this.slides[this.review_details.activeSlide.index];\n        return slide ? slide.name : this.review_details.activeSlide.name;\n    };\n    // Get the active slide name\n    ReviewFormWidget.prototype.getActiveSlideName = function () {\n        return this.review_details.activeSlide.name;\n    };\n    // Lock the slide to prevent multiple transitions\n    ReviewFormWidget.prototype.lockSlide = function () {\n        this.sliding = true;\n    };\n    // Enable slide after transition\n    ReviewFormWidget.prototype.enableSlide = function () {\n        var _this = this;\n        setTimeout(function () {\n            _this.sliding = false;\n        }, 1000);\n    };\n    // Check if sliding is locked\n    ReviewFormWidget.prototype.isSlideLocked = function () {\n        return this.sliding;\n    };\n    // Validate the current slide's input\n    ReviewFormWidget.prototype.validate = function () {\n        var slideName = this.getActiveSlideName();\n        if (slideName === \"review\") {\n            return this.validateReviewContent();\n        }\n        else if (slideName === \"reviewer\") {\n            return this.validateReviewerInfo();\n        }\n        if (slideName == \"photo\" && this.isSubmitSlidePhoto()) {\n            var isPhotoUploaded = this.getUploadedPhotoCount() > 0;\n            if (!isPhotoUploaded) {\n                alert(\"Need to Upload minimum one photo\");\n            }\n            return isPhotoUploaded;\n        }\n        return true;\n    };\n    // Validate review content\n    ReviewFormWidget.prototype.validateReviewContent = function () {\n        var isValid = this.review_details.review_text.trim() !== \"\";\n        var reviewTextError = this.shadowRoot.querySelector(\".r_rfw_review_text_error\");\n        if (!isValid && reviewTextError) {\n            this.jquery(reviewTextError)\n                .html(\"Review Text Required\")\n                .removeClass(\"r_rfw_hide\");\n        }\n        else {\n            this.jquery(reviewTextError).addClass(\"r_rfw_hide\");\n        }\n        return isValid;\n    };\n    // Validate reviewer information\n    ReviewFormWidget.prototype.validateReviewerInfo = function () {\n        var firstNameValid = this.review_details.first_name.trim() !== \"\";\n        var lastNameValid = this.review_details.last_name.trim() !== \"\";\n        var emailValid = this.review_details.email.trim() !== \"\";\n        var validEmailFormat = this.validateEmail(this.review_details.email.trim());\n        var isValid = firstNameValid && lastNameValid && emailValid && validEmailFormat;\n        if (!isValid) {\n            var firstnameDom = this.shadowRoot.querySelector(\".r_rfw_review_info_first_name_error\");\n            var lastnameDom = this.shadowRoot.querySelector(\".r_rfw_review_info_last_name_error\");\n            var emailDom = this.shadowRoot.querySelector(\".r_rfw_review_info_email_error\");\n            if (!firstNameValid) {\n                this.jquery(firstnameDom)\n                    .html(\"First name is required\")\n                    .removeClass(\"r_rfw_hide\");\n            }\n            if (!lastNameValid) {\n                this.jquery(lastnameDom)\n                    .html(\"Last name is required\")\n                    .removeClass(\"r_rfw_hide\");\n            }\n            if (!emailValid) {\n                this.jquery(emailDom)\n                    .html(\"Email is required\")\n                    .removeClass(\"r_rfw_hide\");\n            }\n            else if (!validEmailFormat) {\n                this.jquery(emailDom)\n                    .html(\"Invalid Email format\")\n                    .removeClass(\"r_rfw_hide\");\n            }\n        }\n        else {\n            this.hideReviewerInfoErrors();\n        }\n        return isValid;\n    };\n    // Validate email format\n    ReviewFormWidget.prototype.validateEmail = function (email) {\n        var re = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n        return re.test(email);\n    };\n    // Hide reviewer info errors\n    ReviewFormWidget.prototype.hideReviewerInfoErrors = function () {\n        var _this = this;\n        var _a;\n        (_a = this.shadowRoot\n            .querySelectorAll(\".r_rfw_review_info_error\")) === null || _a === void 0 ? void 0 : _a.forEach(function (item) {\n            _this.jquery(item).addClass(\"r_rfw_hide\").html(\"\");\n        });\n    };\n    // Slide to the next content\n    ReviewFormWidget.prototype.slideNext = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var submitResult;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isSlideLocked())\n                            return [2 /*return*/];\n                        this.lockSlide();\n                        if (!this.validate()) {\n                            this.enableSlide();\n                            return [2 /*return*/];\n                        }\n                        if (!(this.getActiveSlideName() === this.submitSlide)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.submit()];\n                    case 1:\n                        submitResult = _a.sent();\n                        if (!submitResult) {\n                            alert(\"API error occurred\");\n                            this.enableSlide();\n                            return [2 /*return*/];\n                        }\n                        //if submission is successful we can remove the footer so user.\n                        this.removeFooter();\n                        _a.label = 2;\n                    case 2:\n                        if (this.review_details.activeSlide.index >= this.slides.length - 1) {\n                            this.enableSlide();\n                            return [2 /*return*/];\n                        }\n                        this.review_details.activeSlide.index += 1;\n                        this.review_details.activeSlide.name = this.getSlideNameToSet();\n                        this.review_details.translateX -= 100;\n                        this.slide();\n                        this.enableSlide();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // Slide to the previous content\n    ReviewFormWidget.prototype.slidePrev = function () {\n        if (this.review_details.activeSlide.index === 0) {\n            return;\n        }\n        this.review_details.activeSlide.index -= 1;\n        this.review_details.activeSlide.name = this.getSlideNameToSet();\n        this.review_details.translateX += 100;\n        this.slide();\n    };\n    // Perform the slide animation\n    ReviewFormWidget.prototype.slide = function () {\n        var mainContentWrapper = this.shadowRoot.querySelector(\".r_rfw_main_content_wrapper\");\n        mainContentWrapper.style.transform = \"translateX(\".concat(this.review_details.translateX, \"%)\");\n        var activeSlideName = this.getActiveSlideName();\n        if (activeSlideName !== \"rating\" && activeSlideName !== this.lastSlide) {\n            this.showFooter();\n        }\n        else {\n            this.hideFooter();\n        }\n    };\n    // Show footer\n    ReviewFormWidget.prototype.showFooter = function () {\n        var footer = this.shadowRoot.querySelector(\".r_rfw_footer_wrapper\");\n        if (footer) {\n            this.jquery(footer).removeClass(\"r_rfw_hide\");\n            var forwardButton = this.shadowRoot.querySelector(\".r_rfw_footer_forward_btn\");\n            if (this.isNeedToShowNext()) {\n                var nextButtonName = this.getNextButtonName();\n                if (forwardButton) {\n                    this.jquery(forwardButton).removeClass(\"r_rfw_hide\");\n                    this.jquery(forwardButton)\n                        .find(\".r_rfw-button__text\")\n                        .text(nextButtonName);\n                }\n            }\n            else {\n                if (forwardButton) {\n                    this.jquery(forwardButton).addClass(\"r_rfw_hide\");\n                }\n            }\n        }\n    };\n    // Hide footer\n    ReviewFormWidget.prototype.hideFooter = function () {\n        var footer = this.shadowRoot.querySelector(\".r_rfw_footer_wrapper\");\n        if (footer) {\n            this.jquery(footer).addClass(\"r_rfw_hide\");\n        }\n    };\n    ReviewFormWidget.prototype.removeFooter = function () {\n        var footer = this.shadowRoot.querySelector(\".r_rfw_footer_wrapper\");\n        if (footer) {\n            this.jquery(footer).remove();\n        }\n    };\n    // Determine if the next button should be shown\n    ReviewFormWidget.prototype.isNeedToShowNext = function () {\n        var activeSlideName = this.getActiveSlideName();\n        return ![\"rating\", \"thank_you\", \"next_products\"].includes(activeSlideName);\n    };\n    // Get the name for the next button based on the current slide\n    ReviewFormWidget.prototype.getNextButtonName = function () {\n        var activeSlideName = this.getActiveSlideName();\n        if (activeSlideName === \"photo\") {\n            return this.submitSlide === \"photo\"\n                ? \"DONE\"\n                : this.review_details.files.photos.length > 0\n                    ? \"CONTINUE\"\n                    : \"SKIP\";\n        }\n        else if (activeSlideName === \"review\") {\n            return this.submitSlide === \"review\" ? \"DONE\" : \"CONTINUE\";\n        }\n        else if (activeSlideName === \"reviewer\") {\n            return this.submitSlide === \"reviewer\" ? \"DONE\" : \"DONE\";\n        }\n        else {\n            return \"CONTINUE\";\n        }\n    };\n    // Initialize rating section\n    ReviewFormWidget.prototype.initRatingSection = function () {\n        var _this = this;\n        this.shadowRoot\n            .querySelectorAll(\".r_rfw_rating_icon\")\n            .forEach(function (item, index) {\n            item.addEventListener(\"click\", function () {\n                _this.ratingAnimation(index + 1);\n                _this.review_details.rating = index + 1;\n                _this.slideNext();\n            });\n        });\n    };\n    // Perform rating animation\n    ReviewFormWidget.prototype.ratingAnimation = function (rating) {\n        var _this = this;\n        this.shadowRoot\n            .querySelectorAll(\".r_rfw_rating_icon\")\n            .forEach(function (item, index) {\n            if (index < rating) {\n                _this.jquery(item).addClass(\"review_rating_active\");\n            }\n            else {\n                _this.jquery(item).removeClass(\"review_rating_active\");\n            }\n        });\n    };\n    ReviewFormWidget.prototype.isSubmitSlidePhoto = function () {\n        return this.submitSlide == \"photo\";\n    };\n    ReviewFormWidget.prototype.getUploadedPhotoCount = function () {\n        return this.review_details.files.photos.length;\n    };\n    ReviewFormWidget.prototype.isMaxPhotoUploaded = function () {\n        return (this.getUploadedPhotoCount() +\n            this.review_details.extra.previous_photo_count >=\n            5);\n    };\n    ReviewFormWidget.prototype.isPhotoUploadDisabled = function () {\n        return this.isMaxPhotoUploaded();\n    };\n    // Initialize photo section\n    ReviewFormWidget.prototype.initPhotoSection = function () {\n        var _this = this;\n        var addPhotoButtons = this.shadowRoot.querySelectorAll(\".wd_add_photos_btn\");\n        addPhotoButtons.forEach(function (item) {\n            _this.jquery(item).on(\"click\", function () {\n                if (_this.isPhotoUploadDisabled()) {\n                    return;\n                }\n                var fileInput = _this.shadowRoot.querySelector(\".r_frw_file_input\");\n                if (fileInput) {\n                    _this.jquery(fileInput).trigger(\"click\");\n                }\n            });\n        });\n        var fileInput = this.shadowRoot.querySelector(\".r_frw_file_input\");\n        fileInput === null || fileInput === void 0 ? void 0 : fileInput.addEventListener(\"change\", function (e) {\n            return _this.handleFileUpload(e);\n        });\n        this.showUploadButtons();\n    };\n    // Handle file upload\n    ReviewFormWidget.prototype.handleFileUpload = function (e) {\n        var _this = this;\n        var target = e.target;\n        //@ts-ignore\n        var file = (target === null || target === void 0 ? void 0 : target.files) ? target.files[0] : null;\n        if (!file)\n            return;\n        var addIcon = this.shadowRoot.querySelector(\".review-plus\");\n        addIcon === null || addIcon === void 0 ? void 0 : addIcon.classList.add(\"hide\");\n        this.shadowRoot.querySelectorAll(\".r_frw_img_loader\").forEach(function (icon) {\n            return icon === null || icon === void 0 ? void 0 : icon.classList.add(\"visible\");\n        });\n        var reader = new FileReader();\n        reader.onloadend = function () {\n            var formData = new FormData();\n            formData.append(\"method\", \"upload_review_image\");\n            formData.append(\"action\", _this.review_form_store_config.action);\n            formData.append(\"_wp_nonce\", _this.review_form_store_config._wp_nonce);\n            formData.append(\"_wp_nonce_key\", _this.review_form_store_config._wp_nonce_key);\n            formData.append(\"upload_image\", file);\n            _this.jquery\n                .ajax(_this.review_form_store_config.ajax_url, {\n                method: \"POST\",\n                contentType: false,\n                processData: false,\n                data: formData,\n            })\n                .then(function (response) {\n                var data = response.data;\n                if (data === null || data === void 0 ? void 0 : data.attachment_id) {\n                    _this.review_details.files.photos.push({\n                        id: data.attachment_id,\n                        url: data.attachment_url,\n                    });\n                    _this.addPhotoToList(data.attachment_id, data.attachment_url);\n                    _this.showUploadButtons();\n                    _this.shadowRoot\n                        .querySelectorAll(\".r_frw_img_loader\")\n                        .forEach(function (icon) {\n                        return icon === null || icon === void 0 ? void 0 : icon.classList.remove(\"visible\");\n                    });\n                    addIcon === null || addIcon === void 0 ? void 0 : addIcon.classList.remove(\"hide\");\n                    // Temporarily Commented out\n                    // if (!this.isSubmitSlidePhoto()) {\n                    //   this.slideNext();\n                    // }\n                    _this.showFooter();\n                }\n            })\n                .catch(function () {\n                console.log(\"Error uploading image\");\n            });\n        };\n        reader.readAsDataURL(file);\n    };\n    // Add uploaded photo to the list\n    ReviewFormWidget.prototype.addPhotoToList = function (attachment_id, attachment_url) {\n        var _this = this;\n        var imageContainerTemplate = this.shadowRoot.querySelector(\".r_frw_img_container\");\n        var imageContainer = imageContainerTemplate.cloneNode(true);\n        this.jquery(imageContainer)\n            .attr(\"image-id\", attachment_id)\n            .attr(\"image-url\", attachment_url)\n            .find(\"img\")\n            .attr(\"src\", attachment_url);\n        this.jquery(imageContainer).removeClass(\"r_rfw_hide\");\n        var list = this.shadowRoot.querySelector(\".r_frw_photos_list\");\n        this.jquery(list).prepend(imageContainer);\n        var photoContainer = this.shadowRoot.querySelector(\".r_frw_view_photos_container\");\n        this.jquery(photoContainer)\n            .find(\".r_frw_img_close_icon\")\n            .on(\"click\", function () { return _this.removePhoto(imageContainer, attachment_id); });\n    };\n    // Remove photo from the list\n    ReviewFormWidget.prototype.removePhoto = function (imageContainer, attachment_id) {\n        this.review_details.files.photos = this.review_details.files.photos.filter(function (photo) { return photo.id !== attachment_id; });\n        this.jquery(imageContainer).remove();\n        this.showUploadButtons();\n    };\n    // Show or hide upload buttons based on photo count\n    ReviewFormWidget.prototype.showUploadButtons = function () {\n        var emptyPhotoSection = this.shadowRoot.querySelector(\".r_rfw_empty_photo_section\");\n        var photoContainer = this.shadowRoot.querySelector(\".r_frw_view_photos_container\");\n        if (this.isPhotoUploadDisabled()) {\n            this.jquery(photoContainer).removeClass(\"r_rfw_hide\");\n            //@ts-ignore\n            var addphoto = this.jquery(photoContainer).find(\".wd_add_photos_btn\");\n            this.jquery(emptyPhotoSection).addClass(\"r_rfw_hide\");\n            addphoto.addClass(\"r_rfw_hide\");\n        }\n        else {\n            if (this.review_details.files.photos.length !== 0) {\n                this.jquery(emptyPhotoSection).addClass(\"r_rfw_hide\");\n                this.jquery(photoContainer).removeClass(\"r_rfw_hide\");\n            }\n            else {\n                this.jquery(photoContainer).addClass(\"r_rfw_hide\");\n                this.jquery(emptyPhotoSection).removeClass(\"r_rfw_hide\");\n            }\n        }\n    };\n    // Initialize review content section\n    ReviewFormWidget.prototype.initReviewContentSection = function () {\n        var _this = this;\n        var reviewContentInput = this.shadowRoot.querySelector(\".r_rfw_review_content_text\");\n        reviewContentInput === null || reviewContentInput === void 0 ? void 0 : reviewContentInput.addEventListener(\"change\", function (event) {\n            var target = event.target;\n            _this.review_details.review_text = target.value;\n        });\n    };\n    // Initialize reviewer info section\n    ReviewFormWidget.prototype.initReviewerInfoSection = function () {\n        var _this = this;\n        var firstNameInput = this.shadowRoot.querySelector(\".r_rfw_reviewer_first_name\");\n        firstNameInput === null || firstNameInput === void 0 ? void 0 : firstNameInput.addEventListener(\"change\", function (event) {\n            var target = event.target;\n            _this.review_details.first_name = target.value;\n        });\n        var lastNameInput = this.shadowRoot.querySelector(\".r_rfw_reviewer_last_name\");\n        lastNameInput === null || lastNameInput === void 0 ? void 0 : lastNameInput.addEventListener(\"change\", function (event) {\n            var target = event.target;\n            _this.review_details.last_name = target.value;\n        });\n        var emailInput = this.shadowRoot.querySelector(\".r_rfw_reviewer_email\");\n        emailInput === null || emailInput === void 0 ? void 0 : emailInput.addEventListener(\"change\", function (event) {\n            var target = event.target;\n            _this.review_details.email = target.value;\n        });\n    };\n    // Initialize footer\n    ReviewFormWidget.prototype.initFooter = function () {\n        var _this = this;\n        // Back button event\n        this.shadowRoot\n            .querySelectorAll(\".r_rfw_footer_back_btn\")\n            .forEach(function (item) {\n            item.addEventListener(\"click\", function () { return _this.slidePrev(); });\n        });\n        // Forward button event\n        this.shadowRoot\n            .querySelectorAll(\".r_rfw_footer_forward_btn, .r_rfw_continue_btn\")\n            .forEach(function (item) {\n            item.addEventListener(\"click\", function (e) {\n                e.preventDefault();\n                _this.slideNext();\n            });\n        });\n        this.hideFooter();\n    };\n    ReviewFormWidget.prototype.registerCloseIcon = function () {\n        var _this = this;\n        var _a;\n        // Close dialog event\n        (_a = this.shadowRoot\n            .querySelector(\".r_rfw_dialog_close_icon\")) === null || _a === void 0 ? void 0 : _a.addEventListener(\"click\", function () {\n            var _a;\n            if (_this.review_form_store_config.is_product_page) {\n                (_a = _this.dialog) === null || _a === void 0 ? void 0 : _a.close();\n            }\n            else {\n                setTimeout(function () {\n                    window.location.href = \"shop\";\n                }, 500);\n            }\n        });\n    };\n    ReviewFormWidget.prototype.submitLoading = function (submit) {\n        if (submit === void 0) { submit = false; }\n        var submitButton = this.shadowRoot.querySelector(\".r_rfw-submit_button\");\n        submit\n            ? this.jquery(submitButton).addClass(\"r_rfw-button--loading\")\n            : this.jquery(submitButton).removeClass(\"r_rfw-button--loading\");\n    };\n    // Submit the form data\n    ReviewFormWidget.prototype.submit = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var data, result, response, discount_content, discount_wrapper, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.submitLoading(true);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        data = {\n                            method: \"save_customer_review\",\n                            submit_slide: this.submitSlide,\n                            action: this.review_form_store_config.action,\n                            product_id: this.review_details.product_id,\n                            order_id: this.review_details.order_id,\n                            review_text: this.review_details.review_text,\n                            rating: this.review_details.rating,\n                            photos: this.review_details.files.photos,\n                            first_name: this.review_details.first_name,\n                            last_name: this.review_details.last_name,\n                            email: this.review_details.last_name,\n                        };\n                        if (!this.review_details.order_id) {\n                            data.last_name = this.review_details.last_name;\n                            data.email = this.review_details.email;\n                        }\n                        return [4 /*yield*/, this.jquery.ajax(this.review_form_store_config.ajax_url, {\n                                method: \"POST\",\n                                data: data,\n                                contentType: \"application/x-www-form-urlencoded\",\n                            })];\n                    case 2:\n                        result = _a.sent();\n                        response = result.data;\n                        if (result && result.success && response.discount_created) {\n                            discount_content = response.discount_html;\n                            discount_wrapper = this.shadowRoot.querySelector(\".r_rfw_thank_you_discount_detail_wrapper\");\n                            this.jquery(discount_wrapper)\n                                .removeClass(\"r_rfw_hide\")\n                                .html(discount_content);\n                        }\n                        this.submitLoading(false);\n                        return [2 /*return*/, result ? true : false];\n                    case 3:\n                        error_1 = _a.sent();\n                        console.error(error_1);\n                        return [2 /*return*/, false];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return ReviewFormWidget;\n}());\n// Instantiate the ReviewFormWidget\nvar REVIEW_FORM = function () {\n    if (!window.reviewFormWidgetInitialized) {\n        // First time execution logic\n        var reviewFormWidget = new ReviewFormWidget();\n        // Store the floating widget in the window for future use\n        window.reviwFormWidget = reviewFormWidget;\n        // Set the flag to true after first initialization\n        window.reviewFormWidgetInitialized = true;\n    }\n    window.reviwFormWidget.open();\n};\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    window.REVIEW_FORM_WIDGET = REVIEW_FORM;\n    //@ts-ignore\n    var review_form_store_config = window.review_form_store_config;\n    console.log(review_form_store_config);\n    if (review_form_store_config.is_review_form_page) {\n        //@ts-ignore\n        window.REVIEW_FORM_WIDGET();\n    }\n});\n\n\n//# sourceURL=webpack://scripts/./src/review-form/main.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/review-form/main.ts"]();
/******/ 	
/******/ })()
;